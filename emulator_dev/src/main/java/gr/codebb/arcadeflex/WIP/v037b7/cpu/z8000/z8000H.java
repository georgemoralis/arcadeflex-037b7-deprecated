/*
 * ported to v0.37b7
 * using automatic conversion tool v0.01
 */ 
package gr.codebb.arcadeflex.WIP.v037b7.cpu.z8000;

public class z8000H
{
/*TODO*///	
/*TODO*///	enum {
/*TODO*///		Z8000_PC=1, Z8000_NSP, Z8000_FCW, Z8000_PSAP, Z8000_REFRESH,
/*TODO*///		Z8000_IRQ_REQ, Z8000_IRQ_SRV, Z8000_IRQ_VEC,
/*TODO*///		Z8000_R0, Z8000_R1, Z8000_R2, Z8000_R3,
/*TODO*///		Z8000_R4, Z8000_R5, Z8000_R6, Z8000_R7,
/*TODO*///		Z8000_R8, Z8000_R9, Z8000_R10, Z8000_R11,
/*TODO*///		Z8000_R12, Z8000_R13, Z8000_R14, Z8000_R15,
/*TODO*///		Z8000_NMI_STATE, Z8000_NVI_STATE, Z8000_VI_STATE };
	
	/* Interrupt Types that can be generated by outside sources */
        public static final int Z8000_TRAP		= 0x4000;	/* internal trap */
        public static final int Z8000_NMI		= 0x2000;	/* non maskable interrupt */
        public static final int Z8000_SEGTRAP           = 0x1000;	/* segment trap (Z8001) */
	public static final int Z8000_NVI		= 0x0800;	/* non vectored interrupt */
	public static final int Z8000_VI		= 0x0400;	/* vectored interrupt (LSB is vector)  */
        public static final int Z8000_SYSCALL           = 0x0200;	/* system call (lsb is vector) */
        public static final int Z8000_HALT		= 0x0100;	/* halted flag	*/
        public static final int Z8000_INT_NONE          = 0x0000;

/*TODO*///	/* PUBLIC FUNCTIONS */
/*TODO*///	extern unsigned z8000_get_context(void *dst);
/*TODO*///	extern void z8000_set_context(void *src);
/*TODO*///	extern unsigned z8000_get_pc(void);
/*TODO*///	extern void z8000_set_pc(unsigned val);
/*TODO*///	extern unsigned z8000_get_sp(void);
/*TODO*///	extern void z8000_set_sp(unsigned val);
/*TODO*///	extern unsigned z8000_get_reg(int regnum);
/*TODO*///	extern void z8000_set_reg(int regnum, unsigned val);
/*TODO*///	extern void z8000_reset(void *param);
/*TODO*///	extern extern int	z8000_execute(int cycles);
/*TODO*///	extern void z8000_set_nmi_line(int state);
/*TODO*///	extern void z8000_set_irq_line(int irqline, int state);
/*TODO*///	extern void z8000_set_irq_callback(int (*callback)(int irqline));
/*TODO*///	extern const char *z8000_info(void *context, int regnum);
/*TODO*///	extern unsigned z8000_dasm(char *buffer, unsigned pc);
/*TODO*///	
/*TODO*///	extern void z8000_State_Save(int cpunum, void *f);
/*TODO*///	extern void z8000_State_Load(int cpunum, void *f);
/*TODO*///	
/*TODO*///	/* PUBLIC GLOBALS */
/*TODO*///	extern int z8000_ICount;
/*TODO*///	
/*TODO*///	#ifdef MAME_DEBUG
/*TODO*///	extern int DasmZ8000(char *buff, int pc);
/*TODO*///	#endif
/*TODO*///	
/*TODO*///	#endif /* Z8K_H */
}
